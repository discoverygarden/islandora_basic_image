<?php

/**
 * @file
 * Handles the creation and display of basic image objects.
 */

use Drupal\Core\Url;
use Drupal\Core\Link;

use Drupal\islandora\DublinCore;

/**
 * Implements hook_islandora_view_print_object().
 */
function islandora_basic_image_islandora_view_print_object($object) {
  if (in_array('islandora:sp_basic_image', $object->models)) {
    // Theme the image seperatly.
    $print_image = [
      '#theme' => 'image',
      '#title' => $object->label,
      '#uri' => Url::fromRoute('islandora.view_datastream_view', ['object' => $object->id, 'datastream' => 'OBJ'])->toString(),
    ];
    $variables['islandora_img'] = \Drupal::service('renderer')->render($print_image);
    return [
      '#theme' => 'islandora_basic_image_print',
      '#islandora_content' => $variables['islandora_img'],
    ];
  }

  return [];
}

/**
 * Implements hook_theme().
 *
 * We supply a pattern so we can overide templates at the theme level if needed.
 * we can append a pid to a template and the new template file will be called
 * (the pids colon should be replaced with a dash).
 */
function islandora_basic_image_theme($existing, $type, $theme, $path) {
  return [
    'islandora_basic_image' => [
      // We can add PIDs to the end of this pattern in our preprocess function
      // and templates will be able to have have a pid appended to the
      // template name to overide a template on a per object basis.
      // An example template might be named:
      // "islandora-basic-image--islandora-27.tpl.php".
      'pattern' => 'islandora_basic_image__',
      'variables' => ['islandora_object' => NULL],
    ],
    'islandora_basic_image_print' => [
      'variables' => ['islandora_content' => NULL],
    ],
  ];
}

/**
 * Implements hook_islandora_required_objects().
 */
function islandora_basic_image_islandora_required_objects(IslandoraTuque $connection) {
  $module_path = drupal_get_path('module', 'islandora_basic_image');
  // Image Content Model.
  $image_content_model = $connection->repository->constructObject('islandora:sp_basic_image');
  $image_content_model->owner = 'fedoraAdmin';
  $image_content_model->label = 'Islandora Basic Image Content Model';
  $image_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $image_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'X');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'application/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_basic_image_ds_composite_model.xml", FALSE);
  $image_content_model->ingestDatastream($datastream);
  // Image Collection.
  $image_collection = $connection->repository->constructObject('islandora:sp_basic_image_collection');
  $image_collection->owner = 'fedoraAdmin';
  $image_collection->label = 'Basic Image Collection';
  $image_collection->models = 'islandora:collectionCModel';
  $image_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');
  // Collection Policy Datastream.
  $datastream = $image_collection->constructDatastream('COLLECTION_POLICY', 'X');
  $datastream->label = 'Collection policy';
  $datastream->mimetype = 'application/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_basic_image_collection_policy.xml", FALSE);
  $image_collection->ingestDatastream($datastream);
  // TN Datastream.
  $datastream = $image_collection->constructDatastream('TN', 'M');
  $datastream->label = 'Thumbnail';
  $datastream->mimetype = 'image/png';
  $datastream->setContentFromFile("$module_path/images/folder.png", FALSE);
  $image_collection->ingestDatastream($datastream);
  return [
    'islandora_basic_image' => [
      'title' => 'Islandora basic image',
      'objects' => [
        $image_content_model,
        $image_collection,
      ],
    ],
  ];
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_basic_image_islandora_sp_basic_image_islandora_view_object($object, $page_number, $page_size) {
  return [
    '#theme' => 'islandora_basic_image',
    '#islandora_object' => $object,
  ];
}

/**
 * Implements hook_preprocess_theme().
 */
function template_preprocess_islandora_basic_image(array &$variables) {
  $islandora_object = $variables['islandora_object'];
  module_load_include('inc', 'islandora', 'includes/datastream');
  module_load_include('inc', 'islandora', 'includes/utilities');
  module_load_include('inc', 'islandora', 'includes/metadata');

  // We should eventually remove the DC object and dc_array code as it only
  // exists to not break legacy implementations.
  if (islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $islandora_object['DC'])) {
    try {
      $dc = $islandora_object['DC']->content;
      $dc_object = DublinCore::importFromXMLString($dc);
    }
    catch (Exception $e) {
      drupal_set_message(t('Error retrieving object %s %t', ['%s' => $islandora_object->id, '%t' => $e->getMessage()]), 'error', FALSE);
    }
  }
  $variables['islandora_dublin_core'] = isset($dc_object) ? $dc_object : NULL;
  $variables['dc_array'] = isset($dc_object) ? $dc_object->asArray() : [];
  $variables['islandora_object_label'] = $islandora_object->label;
  $variables['theme_hook_suggestions'][] = 'islandora_basic_image__' . str_replace(':', '_', $islandora_object->id);
  $variables['parent_collections'] = islandora_get_parents_from_rels_ext($islandora_object);
  $variables['metadata'] = islandora_retrieve_metadata_markup($islandora_object);
  $variables['description'] = islandora_retrieve_description_markup($islandora_object);

  // Original.
  if (isset($islandora_object['OBJ']) && islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $islandora_object['OBJ'])) {
    $full_size_url = Url::fromRoute('islandora.view_datastream_view', ['object' => $islandora_object->id, 'datastream' => 'OBJ']);
    $variables['islandora_full_url'] = $full_size_url->toString();
    $full_image = [
      '#theme' => 'image',
      '#title' => $islandora_object->label,
      '#uri' => $full_size_url->toString(),
    ];
    $variables['islandora_full_img'] = \Drupal::service('renderer')->render($full_image);
  }
  // Thumbnail.
  if (isset($islandora_object['TN']) && islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $islandora_object['TN'])) {
    $thumbnail_size_url = Url::fromRoute('islandora.view_datastream_view', ['object' => $islandora_object->id, 'datastream' => 'TN'])->toString();
    $thumbnail_image = [
      '#theme' => 'image',
      '#title' => $islandora_object->label,
      '#uri' => $thumbnail_size_url,
    ];
    $variables['islandora_thumbnail_img'] = \Drupal::service('renderer')->render($thumbnail_image);
  }
  // Medium size.
  if (isset($islandora_object['MEDIUM_SIZE']) && islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $islandora_object['MEDIUM_SIZE'])) {
    $medium_size_url = Url::fromRoute('islandora.view_datastream_view', ['object' => $islandora_object->id, 'datastream' => 'MEDIUM_SIZE'])->toString();
    $medium_image = [
      '#theme' => 'image',
      '#title' => $islandora_object->label,
      '#uri' => $medium_size_url,
    ];
    $variables['islandora_medium_img'] = \Drupal::service('renderer')->render($medium_image);
    if (isset($full_size_url)) {
      $variables['islandora_content'] = Link::fromTextAndUrl(
        $variables['islandora_medium_img'],
        $full_size_url
      );
    }
    else {
      $variables['islandora_content'] = $variables['islandora_medium_img'];
    }
  }
}

/**
 * Implements hook_xml_form_builder_form_associations().
 */
function islandora_basic_image_xml_form_builder_form_associations() {
  return [
    'islandora_basic_image_mods_form' => [
      'self_transform' => 'islandora_cleanup_mods_extended.xsl',
      'content_model' => 'islandora:sp_basic_image',
      'form_name' => 'Basic image MODS form',
      'dsid' => 'MODS',
      'title_field' => ['titleInfo', 'title'],
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ],
  ];
}

/**
 * Implements hook_xml_form_builder_forms().
 */
function islandora_basic_image_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_basic_image');
  return [
    'Basic image MODS form' => [
      'form_file' => "$module_path/xml/islandora_basic_image_form_mods.xml",
    ],
  ];
}

/**
 * Implements hook_islandora_ingest_steps().
 */
function islandora_basic_image_islandora_sp_basic_image_islandora_ingest_steps() {
  return [
    'islandora_basic_image' => [
      'weight' => 10,
      'type' => 'form',
      'form_class' => 'Drupal\islandora_basic_image\Form\ImageUpload',
    ],
  ];
}

/**
 * Implements hook_islandora_CMODEL_PID_derivative().
 */
function islandora_basic_image_islandora_sp_basic_image_islandora_derivative() {
  return [
    [
      'source_dsid' => 'OBJ',
      'destination_dsid' => 'TN',
      'weight' => '0',
      'function' => [
        'islandora_basic_image_create_thumbnail',
      ],
      'file' => drupal_get_path('module', 'islandora_basic_image') . '/includes/derivatives.inc',
    ],
    [
      'source_dsid' => 'OBJ',
      'destination_dsid' => 'MEDIUM_SIZE',
      'weight' => '1',
      'function' => [
        'islandora_basic_image_create_medium_size',
      ],
      'file' => drupal_get_path('module', 'islandora_basic_image') . '/includes/derivatives.inc',
    ],
  ];
}

/**
 * Implements hook_help().
 */
function islandora_basic_image_help($route) {
  switch ($route) {
    // Main help page for the module.
    case 'help.page.islandora_basic_image':
      // About section.
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Islandora Basic Image module allows users to add and manage image files of types GIF, PNG, and JPG/JPEG without a separate viewer. Thumbnail images are derived for display in the collection view. Medium sized previews are derived for the View tab of the image object. The image can be viewed in its original form by clicking on the image in its View tab. See the <a href=":wiki">Islandora Basic Image Solution Pack wiki*</a> for more information.', [
        ':wiki' => 'https://wiki.duraspace.org/display/ISLANDORA/Basic+Image+Solution+Pack',
      ]) .
      '</p>';
      // Uses section.
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dt>' . t('Upload Image Objects') . '</dt><dd>';
      $output .= t('In the "Manage" tab of any collection configured to accept the Islandora Basic Image Content Model, click "Add an object to this Collection", and follow the ingest form.') .
      '</dd>';
      $output .= '<dt>' . t('View Image Objects') . '</dt><dd>';
      $output .= t('In the "View" tab of an image colleciton, click on the thumbnail for your desired image object; that will bring you to the medium size preview in the "View" tab of the object. Clicking on the medium size preview of the image will allow you to full-screen the image to see its original size.') .
      '</dd>';
      $output .= '<dt>' . t('Download Image Objects') . '</dt><dd>';
      $output .= t('There are two ways to download a basic image from your website:</br>1. You can navigate to the full-screen view, right-click on the image, and click "Save image as..." or "Download image" etc.</br>2. You can go to the "Manage" page of your desired object, click on the "Datastreams" section and, click "Download" next to the OBJ datastream.') .
      '</dd>';

      $output .= '</br></br><p>';
      $output .= t('*Links go to documentation for the Drupal 7 version of the module, as documentation for the Drupal 8 version of the module has not yet been written. There may be some small discrepencies; however, most key points remain useful.') .
      '</p>';
      return $output;
  }
}
